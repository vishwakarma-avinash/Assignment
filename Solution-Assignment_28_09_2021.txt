Put student data into a file student.dat


 101 sabbir 45 54 67 81 71 66
 102 amit 95 66 62 88 79 63
....

Read data from student.dat and compute percentage of each student and sort student data based on percentage.

package com.yash.Serialization;

import java.util.Arrays;

public class Student {
	
	private int studentId;
	private String studentName;
	private int[] marks;
	
	
	public int getStudentId() {
		return studentId;
	}
	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}
	public String getStudentName() {
		return studentName;
	}
	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}
	public int[] getMarks() {
		return marks;
	}
	public void setMarks(int[] marks) {
		this.marks = marks;
	}
	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", marks=" + Arrays.toString(marks)
				+ "]";
	}
	
	

}
package com.yash.Serialization;

import java.util.List;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;

public class PutData {

	public static void main(String[] args) {

		Student student1 = new Student();
		student1.setStudentId(10101);
		student1.setStudentName("Alex");
		int marksS1[] = {43,43,34,29,39};
		student1.setMarks(marksS1);
		
		Student student2 = new Student();
		student2.setStudentId(10101);
		student2.setStudentName("Brian");
		int marksS2[] = {43,43,34,29,39};
		student2.setMarks(marksS2);
		
		Student student3 = new Student();
		student3.setStudentId(10101);
		student3.setStudentName("Alex");
		int marksS3[] = {43,43,34,29,39};
		student3.setMarks(marksS3);
		
		List<Student> studentList = new ArrayList<>();
		
		studentList.add(student1);
		studentList.add(student2);
		studentList.add(student2);

		
		
		try(
				OutputStream os=new FileOutputStream("D:\\JavaTrainingIO\\sudent.dat");
				ObjectOutputStream oos=new ObjectOutputStream(os);
						
				){
					oos.writeObject(studentList);
					
				}catch(IOException ex) {
				 ex.printStackTrace();
				}
			}
	}

}

package com.yash.Serialization;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;

import com.yash.Serialization.Student;

public class GetStudentData {

	public static void main(String[] args) {
		
		try(
				InputStream is=new FileInputStream("D:\\JavaTrainingIO\\student.dat");
				ObjectInputStream ois=new ObjectInputStream(is);
				){
					Student s=(Student)ois.readObject();
					System.out.println(s);
					
				}catch(IOException | ClassNotFoundException e) {
					e.printStackTrace();
				}

	}

}

------------------------------------------------------------------------------------------------------------------------------------------

package com.yash.Serialization;

import java.io.Serializable;

public class Items implements Serializable{
	
	private int itemId;
	private String itemDescription;
	private int itemQuantity;
	private double itemPrice;
	private int itemDiscountPercentage;
	public int getItemId() {
		return itemId;
	}
	public void setItemId(int itemId) {
		this.itemId = itemId;
	}
	public String getItemDescription() {
		return itemDescription;
	}
	public void setItemDescription(String itemDescription) {
		this.itemDescription = itemDescription;
	}
	public int getItemQuantity() {
		return itemQuantity;
	}
	public void setItemQuantity(int itemQuantity) {
		this.itemQuantity = itemQuantity;
	}
	public double getItemPrice() {
		return itemPrice;
	}
	public void setItemPrice(double itemPrice) {
		this.itemPrice = itemPrice;
	}
	public int getItemDiscountPercentage() {
		return itemDiscountPercentage;
	}
	public void setItemDiscountPercentage(int itemDiscountPercentage) {
		this.itemDiscountPercentage = itemDiscountPercentage;
	}
	@Override
	public String toString() {
		return "Items [itemId=" + itemId + ", itemDescription=" + itemDescription + ", itemQuantity=" + itemQuantity
				+ ", itemPrice=" + itemPrice + ", itemDiscountPercentage=" + itemDiscountPercentage + "]";
	}
	
	

}

package com.yash.Serialization;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import com.yash.serialization.Company;

public class SeriallizationPractice {
	
	public static void main(String args[])
	{
	
	Items item1= new Items();
	item1.setItemId(101);
	item1.setItemDescription("Smartphone");
	item1.setItemQuantity(30);
	item1.setItemPrice(10000.00d);
	item1.setItemDiscountPercentage(13);
	
	Items item2= new Items();
	item2.setItemId(201);
	item2.setItemDescription("Shirt");
	item2.setItemQuantity(15);
	item2.setItemPrice(1299.00d);
	item2.setItemDiscountPercentage(8);
	
	Items item3= new Items();
	item3.setItemId(301);
	item3.setItemDescription("Smartwatch");
	item3.setItemQuantity(10);
	item3.setItemPrice(23000.00d);
	item3.setItemDiscountPercentage(17);
	
	List<Items> itemList= new ArrayList<>();
	itemList.add(item1);
	itemList.add(item2);
	itemList.add(item3);
	
	/*Serialization of Items*/
	
	try{	File file = new File("D:\\JavaTrainingIO\\Items.json");
		  //Creating stream and writing the object    
		  FileOutputStream fout=new FileOutputStream(file);    
		  ObjectOutputStream out=new ObjectOutputStream(fout);    
		  out.writeObject(itemList);    
		  out.flush();    
		  //closing the stream    
		  out.close();    
		  System.out.println("success");    
		  }
	catch(Exception e)
			{System.out.println(e);}   
	
	/*Deserialization of Items*/
	
	ObjectMapper mapper = new ObjectMapper()
	try {
	InputStream is=new FileInputStream("D:\\JavaTrainingIO\\Items.json");
	Items itemFromJson=mapper.readValue(is, Items.class);
	System.out.println(itemFromJson);
	PrintStream ps=new PrintStream(System.out);
	ps.printf("Test");
	}catch(Exception e) {
		e.printStackTrace();
	}
	
	
	
	}

-------------------------------------------------------------------------------------------------------------------------------------------

Create a class Employee with following attributes

    empId
    empFirstName
    empLastName
    empDOB
    empGender

  create subclass Manager of Employee with following attributes

   managerId

  Serialize object of manager except empDOB and deserialize and print details on console.

package com.yash.Serialization;

import java.io.Serializable;

public class Employee implements Serializable{

	private int empId;
	private String empFirstName;
	private String empLastName;
	private transient String empDob;
	private String empGender;
	public int getEmpId() {
		return empId;
	}
	public void setEmpId(int empId) {
		this.empId = empId;
	}
	public String getEmpFirstName() {
		return empFirstName;
	}
	public void setEmpFirstName(String empFirstName) {
		this.empFirstName = empFirstName;
	}
	public String getEmpLastName() {
		return empLastName;
	}
	public void setEmpLastName(String empLastName) {
		this.empLastName = empLastName;
	}
	public String getEmpDob() {
		return empDob;
	}
	public void setEmpDob(String empDob) {
		this.empDob = empDob;
	}
	public String getEmpGender() {
		return empGender;
	}
	public void setEmpGender(String empGender) {
		this.empGender = empGender;
	}
	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empFirstName=" + empFirstName + ", empLastName=" + empLastName
				+ ", empDob=" + empDob + ", empGender=" + empGender + "]";
	}
	
	

}

package com.yash.Serialization;

public class Manager extends Employee{
	
private int managerId;

public Manager(int managerId) {
    this.managerId=managerId;
	
}
}

package com.yash.Serialization;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;

import com.yash.Serialization.Manager;

public class SerializationPractice {

	public static void main(String[] args)
	{
		Employee emp1 = new Employee();
		emp1.setEmpId(10001);
		emp1.setEmpFirstName("Alex");
		emp1.setEmpLastName("Stuart");
		emp1.setEmpDob("21-12-1993");
		emp1.setEmpGender("Male");
		
		//Serialization
				try(
					OutputStream os=new FileOutputStream("D:\\JavaTrainingIO\\Manager.ser");
					ObjectOutputStream oos=new ObjectOutputStream(os);
				   ){
					
					Manager manager=new Manager(101101);
					oos.writeObject(manager);
					
				}catch(IOException e) {
					e.printStackTrace();
				}
				
				//De-Serialization
				try(
					InputStream is=new FileInputStream("D:\\\\JavaTrainingIO\\\\Manager.ser");
					ObjectInputStream ois=new ObjectInputStream(is);
				   ){
					
					Manager manager=(Manager)ois.readObject();
					System.out.println(manager);
					System.out.println(manager.getEmpId());
					System.out.println(manager.getEmpFirstName());
					System.out.println(manager.getEmpLastName());
					System.out.println(manager.getEmpGender());
					
				}catch(IOException | ClassNotFoundException e) {
					e.printStackTrace();
				}
			}
		
		
	}

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create Category,Subcategory,Product,Item classes and associate them.

   Serialize Category to JSON  
   Deserialze category from JSON and print on console

---------------Item CLass-----------------
package com.yash.serialization.json;

import java.io.Serializable;

public class Item implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public Item() {}
	
	private String itemId;
	private String itemDescription;
	private double itemPrice;
	private int itemQuantity;
	
	public int getItemQuantity() {
		return itemQuantity;
	}
	public void setItemQuantity(int itemQuantity) {
		this.itemQuantity = itemQuantity;
	}
	public String getItemId() {
		return itemId;
	}
	public void setItemId(String itemId) {
		this.itemId = itemId;
	}
	public String getItemDescription() {
		return itemDescription;
	}
	public void setItemDescription(String itemDescription) {
		this.itemDescription = itemDescription;
	}
	public double getItemPrice() {
		return itemPrice;
	}
	public void setItemPrice(double itemPrice) {
		this.itemPrice = itemPrice;
	}
	@Override
	public String toString() {
		return "Item [itemId=" + itemId + ", itemDescription=" + itemDescription + ", itemPrice=" + itemPrice + "]";
	}
	
	
}
---------------------------Product Class-----------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class Product implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String productId;
	private String productDescription;
	private List<Item> items;
	
	public Product() {}

	public String getProductId() {
		return productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	public String getProductDescription() {
		return productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	public List<Item> getItems() {
		return items;
	}

	public void setItems(List<Item> items) {
		this.items = items;
	}

	@Override
	public String toString() {
		return "Product [productId=" + productId + ", productDescription=" + productDescription + ", items=" + items
				+ "]";
	}
	

}
--------------------SubCategory Class-----------------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class SubCategory implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String subCategoryId;
	private String subCategoryDescription;
	private List<Product> products;
	
	public SubCategory() {}

	public String getSubCategoryId() {
		return subCategoryId;
	}

	public void setSubCategoryId(String subCategoryId) {
		this.subCategoryId = subCategoryId;
	}

	public String getSubCategoryDescription() {
		return subCategoryDescription;
	}

	public void setSubCategoryDescription(String subCategoryDescription) {
		this.subCategoryDescription = subCategoryDescription;
	}

	public List<Product> getProducts() {
		return products;
	}

	public void setProducts(List<Product> products) {
		this.products = products;
	}

	@Override
	public String toString() {
		return "SubCategory [subCategoryId=" + subCategoryId + ", subCategoryDescription=" + subCategoryDescription
				+ ", products=" + products + "]";
	}
	

}
------------------Category Class------------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class Category implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String categoryId;
	private String categoryDescription;
	private List<SubCategory> categories;
	
	public Category() {}

	public String getCategoryId() {
		return categoryId;
	}

	public void setCategoryId(String categoryId) {
		this.categoryId = categoryId;
	}

	public String getCategoryDescription() {
		return categoryDescription;
	}

	public void setCategoryDescription(String categoryDescription) {
		this.categoryDescription = categoryDescription;
	}

	public List<SubCategory> getCategories() {
		return categories;
	}

	public void setCategories(List<SubCategory> categories) {
		this.categories = categories;
	}

	@Override
	public String toString() {
		return "Category [categoryId=" + categoryId + ", categoryDescription=" + categoryDescription + ", categories="
				+ categories + "]";
	}
	
	
}
-----------------Category Json-------------------
package com.yash.serialization.json;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Arrays;

import org.codehaus.jackson.map.ObjectMapper;

public class CategoryJson {

	public static void main(String[] args) {

		
		ObjectMapper mapper=new ObjectMapper();
		try {
			
			
			Item item1=new Item();
			item1.setItemId("ITEM001");
			item1.setItemDescription("ITEM 1 description");
			item1.setItemPrice(45000);
			
			Item item2=new Item();
			item2.setItemId("ITEM002");
			item2.setItemDescription("ITEM 2 description");
			item2.setItemPrice(25000);
			
			Item item3=new Item();
			item3.setItemId("ITEM003");
			item3.setItemDescription("ITEM 3 description");
			item3.setItemPrice(7000);
			
			Product product1=new Product();
			product1.setProductId("PROD001");
			product1.setProductDescription("PROD 001 description");
			product1.setItems(Arrays.asList(new Item[] {item1,item2}));
			
			Product product2=new Product();
			product2.setProductId("PROD002");
			product2.setProductDescription("PROD 002 description");
			product2.setItems(Arrays.asList(new Item[] {item3}));
			
			
			SubCategory subCategory1=new SubCategory();
			subCategory1.setSubCategoryId("SubCategory001");
			subCategory1.setSubCategoryDescription("SubCategory 1 description");
			subCategory1.setProducts(Arrays.asList(new Product[] {product1}));
			
			SubCategory subCategory2=new SubCategory();
			subCategory2.setSubCategoryId("SubCategory002");
			subCategory2.setSubCategoryDescription("SubCategory 2 description");
			subCategory2.setProducts(Arrays.asList(new Product[] {product2}));
			
			Category category1=new Category();
			category1.setCategoryId("Category001");
			category1.setCategoryDescription("Category 1 description");
			category1.setCategories(Arrays.asList(new SubCategory[] {subCategory1}));
			
//			Category category2=new Category();
//			category2.setCategoryId("Category002");
//			category2.setCategoryDescription("Category 2 description");
//			category2.setCategories(Arrays.asList(new SubCategory[] {subCategory2}));
			try {	
		//mapper.writeValue(System.out, company);
		
		}catch(Exception e) {}
		finally {
			System.out.close();		}
		
		
		//serialization
		OutputStream os=new FileOutputStream("C:\\\\Users\\\\himanshu.kulshrestha\\\\Documents\\\\Others\\\\category.json");
		mapper.writeValue(os, category1);
		
		InputStream is=new FileInputStream("C:\\\\\\\\Users\\\\\\\\himanshu.kulshrestha\\\\\\\\Documents\\\\\\\\Others\\\\\\\\category.json");
		Category categoryFromJson=mapper.readValue(is, Category.class);
		System.out.println(categoryFromJson);
		PrintStream ps=new PrintStream(System.out);
		ps.printf("Test");
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

}
