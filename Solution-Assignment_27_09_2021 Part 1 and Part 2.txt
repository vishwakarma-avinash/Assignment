Count the no. of files in a given folder. Ask end user to add folder path on console and count the no. of files in that folder.

package com.yash.io;

import java.io.File;
import java.util.InputMismatchException;
import java.util.Scanner;

public class PathPractice {
	
	public static void main(String args[])
	{
		String path = null;
		try{
		Scanner input = new Scanner(System.in);
		System.out.print("Enter path of directory : ");
		path = input.next();
		
		}catch(InputMismatchException e)
		{
			System.out.println("Invalid path format");
		}
		
		File folder = new File(path);
		if(folder.isDirectory()==true)
		System.out.println("Given path is valid");
		else
		{
		System.out.println("Given path is not valid");
		System.exit(0);
		}
		int count=0;
		count = folder.list().length;
		System.out.println("Number of files in given directory : "+count);	
	}
	
}
------------------------------------------------------------------------------------------------------------------------------------------

Ask user to enter extension of file on console. Search for all files with that extension in all drives of system.

package com.yash.io;

import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.nio.file.FileStore;
import java.nio.file.FileSystem;
import java.nio.file.FileSystems;
import java.util.Scanner;

public class FilePractice {

	public static void main(String[] args) throws IOException {
		
		Scanner input = new Scanner(System.in);
		System.out.print("Enter file extension : ");
		String extension = input.next();
		
		File file = new File("D:\\JavaTrainingIO");
		FileSystem fileSystem = FileSystems.getDefault();
		Iterable<FileStore> stores=fileSystem.getFileStores();
		
		File[] allTextFiles=file.listFiles(new FileFilter() {
			public boolean accept(FileSystem fileSystem) {
             if(fileSystem.getFileStores().endsWith("txt")) {
            	 return true;
             }
				return false;
			}

			@Override
			public boolean accept(File pathname) {
				// TODO Auto-generated method stub
				return false;
			}
		});
		for(File txtFile:allTextFiles) {
			System.out.println(txtFile);
		}

	}

}

------------------------------------------------------------------------------------------------------------------------------------------
Ask user to enter file path.Ask user to search for a word in a file.


Ask user to enter word to be replaced with

Search for that word in file and replace it with new word entered by user.

Java is Programming language. Java is Object Oriented. Java is simple.

path:d:\\IO\\File1.txt
Search: Java
Replace: Python

package com.yash.io;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class FilePathPractice {

	public static void main(String[] args) throws IOException, FileNotFoundException {
		
		String line;
		int count = 0;
		String[] words;
		Scanner input = new Scanner(System.in);
		System.out.print("Enter the file : ");
		String path = input.next();
		
		System.out.println("Enter the word to replace : ");
		String word = input.next(); 
		
		//Opens a file in read mode  
        FileReader file = new FileReader(path);  
        BufferedReader br = new BufferedReader(file);  
  
        //Gets each line till end of file is reached  
        while((line = br.readLine()) != null) {  
            //Splits each line into words  
             words = line.split("");  
            //Counts each word  
            count = count + words.length;
            for(int i=0;i<words.length;i++)
            {
            	if(words[i]==word)
            	{
            		word="Python";
            	}
            }
  
        }
        FileWriter fileToWritten = new FileWriter(path);
        BufferedWriter bw = new BufferedWriter(fileToWritten);
        br.close();
        bw.close();
	   }
	}
---------------------------------------------------------------------------------------------------------------------------------------

Ask user to enter file path. Count number of words in that file, count number of numbers in that file.


package com.yash.io;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.util.Scanner;

public class FilePracticeCount {
	
	public static void main(String[] args) throws FileNotFoundException
	{
		
		Scanner sc = new Scanner(System.in);
		String path= sc.next();
		
		File file = new File(path);
		
		if(file.isFile()==true)
			System.out.println("Given path is valid");
			else
			{
			System.out.println("Given path is not valid");
			System.exit(0);
			}
		FileInputStream fISObject = new FileInputStream(file);
		InputStreamReader iSRObject = new InputStreamReader(fISObject);
		BufferedReader br= new BufferedReader(iSRObject);
		
		String line;
		int countOfWords = 0;
		int countOfChar = 0;
		int countOfSentence=0;
		int paraCount=0;
		
		 while ((line = br.readLine()) != null) {
	            if (line.equals("")) {
	                paraCount = 1;
	            }
	            else {
	                countOfChar += line.length();
	                String words[] = line.split("\\s+");
	                countOfWords += words.length;
	                String sentence[] = line.split("[!?.:]+");
	                countOfSentence += sentence.length;
	            }
	        }
		 if (countOfSentence >= 1) {
	            paraCount++;
	        }
	        System.out.println("Total word count = "
	                           + countOfWords);
	        System.out.println("Total number of sentences = "
	                           + countOfSentence);
	        System.out.println("Total number of characters = "
	                           + countOfChar);
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ask user to enter file path. Convert all words at alternative position into uppercase excluding spaces.


Java is a programming language.

java IS a PROGRAMMING language.


package com.yash.io;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class FilePracticeConvert {

	public static void main(String[] args) throws IOException {
		
		String line;
		int count = 0;
		String fileContent= null;
		String[] words;
		Scanner input = new Scanner(System.in);
		System.out.print("Enter the file : ");
		String path = input.next();
		
		File file = new File(path);
		
		if(file.isFile()==true)
			System.out.println("Given path is valid");
			else
			{
			System.out.println("Given path is not valid");
			System.exit(0);
			}
		
		//Opens a file in read mode  
        FileReader fr = new FileReader(path);  
        BufferedReader br = new BufferedReader(fr);  
  
        //Gets each line till end of file is reached  
        while((line = br.readLine()) != null) {  
            //Splits each line into words  
             words = line.split("");  
            //Counts each word  
            count = count + words.length;
            for(int i=0;i<words.length;i++)
            {
            	if(i/2==0)
            	{
            		words.toString().toUpperCase();
            	}
            }
            fileContent = words.toString().concat("");
  
        }
        FileWriter fileToWritten = new FileWriter(path);
        BufferedWriter bw = new BufferedWriter(fileToWritten);
        bw.write(fileContent);
        br.close();
        bw.close();
        input.close();
	}

}
